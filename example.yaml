## Github migration schema and reference

---
# Source: Where the various github objects originate
source:
  # API base URL for the source Github instance
  base_url: https://github.roche.com/api/v3
  # Organization, username, or owner where the objects currently reside
  owner: NEST
  # Name of the environment variable from which the 
  # Github PAT is obtained for making API requests
  # in order to retrieve the migration objects
  token_env_var: GITHUB_ROCHE_TOKEN
  # Repositories to migrate
  repositories:
    - r2stream

# Destination: Where you want to migrate to
destination:
  # API base URL for the destination Github instance
  base_url: https://api.github.com
  # Organization, username, or owner where the objects will reside post migration
  owner: insightsengineering
  # Name of the environment variable from which the 
  # Github PAT is obtained for making API requests
  # in order to copy over the migration objects
  token_env_var: GITHUB_TOKEN

# Issues: Migration strategy for issues
issues:
  # Whether to migrate issues
  migrate: true
  # The state or status of the issue which need to be migrated
  # from source to destination
  state: open
  # Add a supplemental message to the issue body
  # which conveys the provenance information pertaining
  # to the original issue
  add_provenance: true
  # Migrate only those issues which have
  # specified labels attached to them
  labels:
    - devops
    - enhancement
  # Handle sensitive information prior to migrating
  # the issue to the destination
  sensitive_info:
    redact: true
    regexes:
      - github.roche.com
  # Migrate issues that were created by only
  # the specified users
  authors:
    - dinakar29
  # Close the source issue after successful migration
  # from source to destination
  close_on_migrate: false
  
  
# Strategy pertaining to labels
labels:
  migrate: true


# Projects: Migration strategy for projects
projects:
  # Whether to migrate projects
  migrate: true
  # The state or status of the projects which need to be migrated
  # from source to destination
  state: open
  # Add a supplemental card to the project
  # which conveys the provenance information pertaining
  # to the original project
  add_provenance: true
  # Handle sensitive information in the project body
  # prior to migrating the project to the destination
  sensitive_info:
    redact: true
    regexes:
      - "github.roche.com"
  # Close the source project after successful migration
  # from source to destination
  close_on_migrate: false
  # Project names that need to be migrated
  names:
    - 'Ignore me'

# Users: A source-destination mapping of usernames
users:
  - source: dinakar29
    destination: dinakar29

milestones:
  migrate: true
  state: open